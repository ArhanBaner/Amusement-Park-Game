/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author arubaner
 */
import java.text.*;
import java.io.*;
import java.awt.Color;                                                          // Looking online, this was an easy way to input color in the text fields
public class culma extends javax.swing.JFrame {

    int[] poi = new int[6];                                                     // Creating an array up here so that a new one does not get created every time a button is presses
    
    
    /**
     * Creates new form culma
     */
    public culma() {
        initComponents();
        enter.setEnabled(false);                                                // These prevent the user from clicking on buttons that they are not meant to by making them greyed out
        bank.setEnabled(false);
        endgame.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        dice1out = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        dice2out = new javax.swing.JTextField();
        roll = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        roundpoints = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        roundscompleted = new javax.swing.JTextField();
        statement = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        bank = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        accountpoints = new javax.swing.JTextField();
        test = new javax.swing.JLabel();
        test1 = new javax.swing.JLabel();
        secpoint2 = new javax.swing.JTextField();
        secpoint1 = new javax.swing.JTextField();
        test2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        endgame = new javax.swing.JButton();
        rollnum = new javax.swing.JTextField();
        round1roll = new javax.swing.JTextField();
        counter = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        prizelist = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        prizenum = new javax.swing.JTextField();
        outputtex = new javax.swing.JTextField();
        enter = new javax.swing.JButton();
        ctr11 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dice1out.setEditable(false);
        dice1out.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setText("Dice 1  (1-9)");

        jLabel2.setText("Dice 2 (1-6)");

        dice2out.setEditable(false);
        dice2out.setBackground(new java.awt.Color(153, 255, 255));
        dice2out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dice2outActionPerformed(evt);
            }
        });

        roll.setBackground(new java.awt.Color(204, 255, 204));
        roll.setText("Roll");
        roll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollActionPerformed(evt);
            }
        });

        jLabel3.setText("Round points");

        roundpoints.setEditable(false);
        roundpoints.setBackground(new java.awt.Color(153, 255, 255));
        roundpoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundpointsActionPerformed(evt);
            }
        });

        jLabel4.setText("Rounds Completed");

        roundscompleted.setEditable(false);
        roundscompleted.setBackground(new java.awt.Color(153, 255, 255));
        roundscompleted.setText("0");
        roundscompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundscompletedActionPerformed(evt);
            }
        });

        statement.setEditable(false);

        bank.setBackground(new java.awt.Color(204, 255, 204));
        bank.setText("Bank Points");
        bank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bankActionPerformed(evt);
            }
        });

        jLabel6.setText("Account points");

        accountpoints.setEditable(false);
        accountpoints.setBackground(new java.awt.Color(153, 255, 255));
        accountpoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountpointsActionPerformed(evt);
            }
        });

        test1.setText("0");

        secpoint1.setText("0");

        test2.setText("0");
        test2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test2ActionPerformed(evt);
            }
        });

        output.setEditable(false);
        output.setBackground(new java.awt.Color(204, 204, 255));
        output.setColumns(20);
        output.setRows(5);
        jScrollPane1.setViewportView(output);

        endgame.setBackground(new java.awt.Color(204, 255, 204));
        endgame.setText("End Game and Choose Prize");
        endgame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endgameActionPerformed(evt);
            }
        });

        rollnum.setText("0");

        round1roll.setText("0");

        counter.setEditable(false);
        counter.setText("0");

        prizelist.setEditable(false);
        prizelist.setBackground(new java.awt.Color(204, 204, 255));
        prizelist.setColumns(20);
        prizelist.setRows(5);
        prizelist.setText("\n");
        jScrollPane2.setViewportView(prizelist);

        jLabel8.setText("Choose Prizes (From 1-6) : ");

        prizenum.setBackground(new java.awt.Color(153, 255, 255));
        prizenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prizenumActionPerformed(evt);
            }
        });

        outputtex.setEditable(false);

        enter.setBackground(new java.awt.Color(204, 255, 204));
        enter.setText("Enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        ctr11.setEditable(false);
        ctr11.setText("0");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        jLabel9.setText("Amusement Park Game");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(979, 979, 979)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rollnum, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(secpoint1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(secpoint2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(counter, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(round1roll, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(ctr11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(208, 208, 208)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(136, 136, 136)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(test)
                            .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(statement, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(bank)
                                .addGap(135, 135, 135)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(accountpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(dice1out, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(roundpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(roundscompleted, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(dice2out, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(376, 376, 376)
                                .addComponent(endgame)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(174, 174, 174))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(prizenum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(enter)
                .addGap(420, 420, 420))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(431, 431, 431)
                        .addComponent(roll, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(outputtex, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(secpoint2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(secpoint1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rollnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(211, 211, 211))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(counter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ctr11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(round1roll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(test2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(19, 19, 19)
                                        .addComponent(test)
                                        .addGap(41, 41, 41)
                                        .addComponent(test1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(dice1out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel1))
                                        .addGap(40, 40, 40)
                                        .addComponent(roll)
                                        .addGap(56, 56, 56))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(dice2out, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(124, 124, 124)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(roundpoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(roundscompleted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)
                                .addComponent(statement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(accountpoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bank))
                                .addGap(64, 64, 64)
                                .addComponent(endgame)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(prizenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enter))
                        .addGap(18, 18, 18)
                        .addComponent(outputtex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)))
                .addComponent(jLabel5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dice2outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dice2outActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dice2outActionPerformed

    private void rollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollActionPerformed
        // TODO add your handling code here:
     
     
     bank.setEnabled(true);
     endgame.setEnabled(true);  
     enter.setEnabled(false);
     String roll = round1roll.getText();
     int rolls = Integer.parseInt(roll);
     rolls++;
     round1roll.setText("" + rolls);                                            // These couple of lines updates how many times this 'roll' button is clicked for the entire game and outputs it to a text field            
   
        
        
    int dice1 = (int)(9*Math.random() + 1);
    int dice2 = (int)(6*Math.random() + 1);
    int roundpoint, sumofpoints = 0;
    
    dice1out.setText("" + dice1);
    dice2out.setText("" + dice2);                                               // Creating and outputting the random numbers for the dice
    
    
    
    roundpoint = dice1 + dice2;
    String point = test1.getText();
    statement.setText("");
    int secpoint = Integer.parseInt(point);                                     // These previous lines code just makes sure that the current rollpoint is added to the previous roll points
    
    if (dice1 + dice2 == 7)
    {
        roundpoint = 0;
    }
    sumofpoints = roundpoint + secpoint;
    
    if (dice1 == 1 || dice2 == 1)
    {
        sumofpoints = 0;
        statement.setText("Oh no! Since either of your dices rolled a 1, your round points have been reset to zero");
    }
    if (dice1 == 1 && dice2 == 1)
    {
        sumofpoints = 0;
        statement.setText("Oh no! Since both of your dices rolled a 1, your round and account points have been reset to zero");
        test2.setText("" + 0);
        accountpoints.setText("" + 0);
    }
    if (dice1 + dice2 == 7)
    {
        sumofpoints = sumofpoints/2;
        statement.setText("Oh no! Since you got a total of 7, your round points have been halved");                             // These are all the punishments to continue rolling
    }
    if (dice1 ==6 && dice2==6)
    {
        String counter = ctr11.getText();
        int ctr1 = Integer.parseInt(counter);
        ctr1++;                                                                 // This keeps a count of many times double 6's are rolled and will be called upon later
        ctr11.setText("" + ctr1);
        statement.setText("You rolled double 6's!");
    }
    
    
    test1.setText("" + sumofpoints);                                            
    roundpoints.setText("" + sumofpoints);                                      // Outputting the final roundpoints after the consequences
    
        
    }//GEN-LAST:event_rollActionPerformed

    private void accountpointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountpointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountpointsActionPerformed

    private void bankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bankActionPerformed
        // TODO add your handling code here:
     
     enter.setEnabled(false);   
     String rolll = round1roll.getText();
     int rolls = Integer.parseInt(rolll);   
     String ro = roundscompleted.getText();
     int rounds = Integer.parseInt(ro);
     String ctr111 = ctr11.getText();
     int ctr1 = Integer.parseInt(ctr111);
     ctr11.setText("" + 0);                                                     // These previous lines of code mainly get information from text fields, parse it into an integer, and store as a variable
     
     int dice1, dice2, ctr2, mult, total=0;
     
     rounds++;
     roundscompleted.setText("" + rounds);
     
     poi[rounds] = Integer.parseInt(roundpoints.getText());                     // This stores the amount of points earned in each round in an array   
     
     if (rounds == 5)
     {
         roll.setEnabled(false);
         bank.setEnabled(false);                                                // Since game ends at round 5, I made it so the user cannot roll or bank after this
         
         
     }
        
     String point = roundpoints.getText();
     int roundpoint = Integer.parseInt(point);
     test1.setText("" + 0);
     roundpoints.setText("" + 0);                                               // This makes sure that after the user 'banks' their points, their round points get set back to zero
     
     if (roundpoint>=50 && roundpoint < 75)
     {
         roundpoint = roundpoint*2;
         statement.setText("Nice job! Since you banked more than 50 points, your round points have doubled");
     }
     else if (roundpoint>=75 && roundpoint < 100)
     {
         roundpoint = roundpoint*3;
         statement.setText("Nice job! Since you banked more than 75 points, your round points have tripled");
     }
     else if (roundpoint>=100)
     {
         roundpoint = roundpoint*4;
         statement.setText("Nice job! Since you banked more than 100 points, your round points have quadrupled");       // After the user banks, their roundpoints get analyzed and may result in bonus points
     }
     if (ctr1>=5)                                                               // This is for the double 6's i.e if the counter see that 5 or more times it has been rolled
     {
         int rannum = (int)(30*Math.random() + 10);
         
         for(ctr2 =0;ctr2<rannum;ctr2++)
         {
             dice1 = (int)(9*Math.random() + 1);
             dice2 = (int)(6*Math.random() + 1);
             
             mult = (dice1*dice2);
             total = total + mult;
         }
         roundpoint=roundpoint+total;
         statement.setText("Congratulations! Since you rolled five double 6's last round, you have gained a bucketload of extra points!"); // Adding the bonus points to the roundpoints
     }
     
     
     String point1 = test2.getText();
     int secpoint = Integer.parseInt(point1);
    
     
     int sumofpoints1 = (roundpoint + secpoint);
     test2.setText("" + sumofpoints1);
     accountpoints.setText("" + sumofpoints1);                                  // These previous lines just update some of the text fields upon whcih they will get information from the next time this button is clicked
     
     double average = (poi[1] + poi[2] + poi[3] + poi[4] + poi[5])/5;           // This callus upon the round points from each round and finds the average
     poi[rounds] = roundpoint;
     if (rounds ==5)
     {
         output.setText("Game over\n" + "Total times rolled: " + rolls +  "\nAverage Rolls in each round: " + (rolls/5)+"\nPoints earned in round 1: " + poi[1] + "\nPoints earned in round 2: " + poi[2] + "\nPoints earned in round 3: " + poi[3] + "\nPoints earned in round 4: " + poi[4]+ "\nPoints earned in round 5: " + poi[5] + "\nThe average points earned in each round: " + average  + "\n(Including bonus points)"  );
     }
     
        
    }//GEN-LAST:event_bankActionPerformed

    private void roundpointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundpointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roundpointsActionPerformed

    private void endgameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endgameActionPerformed
        // TODO add your handling code here:
        
      
      
      prizelist.setText("1. Sparkly Pen and Eraser: 30 points\n2. $5 McDonald's Gift Card: 100 points\n3. Limited Edition T-Shirt: 145 points\n4. Lifesize cardboard cutout of Elvis: 225 points\n5. One admission ticket to amusement park: 300 points\n6. Unlimited admission to amusement park: 400 points");
      endgame.setEnabled(false);
      bank.setEnabled(false);
      roll.setEnabled(false);
      enter.setEnabled(true);                                                   // Outputting the possible prizes and enabling/disabling certain buttons
        
    }//GEN-LAST:event_endgameActionPerformed

    private void prizenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prizenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prizenumActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        // TODO add your handling code here:
        
       int rndpoints  = Integer.parseInt(accountpoints.getText());
       int prizenumber = Integer.parseInt(prizenum.getText());                  // Takes how many account points user has and the prize number chosen and stores in a variable
       
       if(rndpoints>=30)
       {
           if(prizenumber==1 && rndpoints>=30)
           {
               outputtex.setText("You redeemed Sparkly Pen and Eraser");
               accountpoints.setText("" + (rndpoints - 30));                    // Updates roundpoints after successful transaction
           }
           else if (prizenumber==1 && rndpoints<30)
           {
               outputtex.setText("You do not have enough points for this item");
           }
           if(prizenumber==2 && rndpoints>=100)
           {
               outputtex.setText("You redeemed $5 McDonald's Gift Card");
               accountpoints.setText("" + (rndpoints - 100));
           }
           else if (prizenumber==2 && rndpoints<100)
           {
               outputtex.setText("You do not have enough points for this item");
           }
           if(prizenumber==3 && rndpoints>=145)
           {
               outputtex.setText("You redeemed Limited Edition T-Shirt");
               accountpoints.setText("" + (rndpoints - 145));
           }
           else if (prizenumber==3 && rndpoints<145)
           {
               outputtex.setText("You do not have enough points for this item");
           }
           if(prizenumber==4 && rndpoints>=225)
           {
               outputtex.setText("You redeemed Lifesize cardboard cutout of Elvis");
               accountpoints.setText("" + (rndpoints - 225));
           }
           else if (prizenumber==4 && rndpoints<225)
           {
               outputtex.setText("You do not have enough points for this item");
           }
           if(prizenumber==5 && rndpoints>=300)
           {
               outputtex.setText("One admission ticket to amusement park");
               accountpoints.setText("" + (rndpoints - 300));
           }
           else if (prizenumber==5 && rndpoints<300)
           {
               outputtex.setText("You do not have enough points for this item");
           }
           if(prizenumber==6 && rndpoints>=400)
           {
               outputtex.setText("Unlimited admission to amusement park");
               accountpoints.setText("" + (rndpoints - 400));
           }
           else if (prizenumber==6 && rndpoints<400)
           {
               outputtex.setText("You do not have enough points for this item");
           }
       
       
       }
       else if(rndpoints<30)
       {
           outputtex.setText("You cannot redeem any more prizes as you do not have sufficient number of points");
       }
    
       
       
       
       
       
    }//GEN-LAST:event_enterActionPerformed

    private void roundscompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundscompletedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roundscompletedActionPerformed

    private void test2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_test2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(culma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(culma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(culma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(culma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new culma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField accountpoints;
    private javax.swing.JButton bank;
    private javax.swing.JTextField counter;
    private javax.swing.JTextField ctr11;
    private javax.swing.JTextField dice1out;
    private javax.swing.JTextField dice2out;
    private javax.swing.JButton endgame;
    private javax.swing.JButton enter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea output;
    private javax.swing.JTextField outputtex;
    private javax.swing.JTextArea prizelist;
    private javax.swing.JTextField prizenum;
    private javax.swing.JButton roll;
    private javax.swing.JTextField rollnum;
    private javax.swing.JTextField round1roll;
    private javax.swing.JTextField roundpoints;
    private javax.swing.JTextField roundscompleted;
    private javax.swing.JTextField secpoint1;
    private javax.swing.JTextField secpoint2;
    private javax.swing.JTextField statement;
    private javax.swing.JLabel test;
    private javax.swing.JLabel test1;
    private javax.swing.JTextField test2;
    // End of variables declaration//GEN-END:variables
}
